# ============================================================
# Descri√ß√£o:
# Uma pousada deseja automatizar seu sistema de reservas.
# Criar uma fun√ß√£o que receba uma lista de quartos dispon√≠veis
# e uma lista de reservas solicitadas. A fun√ß√£o deve verificar
# quais reservas podem ser aceitas e quais devem ser recusadas
# por falta de disponibilidade.
#
# üìå Regras:
# - Um quarto s√≥ pode ser reservado se estiver dispon√≠vel.
# - Quando um quarto √© reservado, ele deixa de estar dispon√≠vel.
# - Reservas solicitadas para quartos indispon√≠veis devem ser recusadas.
#
# Entrada:
# - Linha 1: lista de quartos dispon√≠veis (n√∫meros separados por espa√ßo).
# - Linha 2: lista de quartos solicitados pelos clientes.
#
# Processamento:
# - Criar listas de confirmadas e recusadas.
# - Percorrer cada reserva.
# - Verificar se o quarto est√° dispon√≠vel.
# - Atualizar o estado da disponibilidade (quartos_disponiveis.remove(quarto)).
#
# Sa√≠da:
# - Lista de reservas confirmadas.
# - Lista de reservas recusadas.
#
# Exemplo de execu√ß√£o:
# Entrada:
# 101 102 103 104
# 102 105 101 103
#
# Sa√≠da:
# Reservas confirmadas: 102 101 103
# Reservas recusadas: 105
# ============================================================



def processar_reservas():   # Tudo que estiver indentado dentro dela faz parte dessa fun√ß√£o.
    # Entrada dos quartos dispon√≠veis
    quartos_disponiveis = set(map(int, input().split()))
                                                          # .split() ‚Üí separa os n√∫meros pelo espa√ßo, transformando em uma lista de strings.
                                                          # map(int, ...) ‚Üí converte cada string em inteiro. Cada elemento √© convertido em inteiro.
                                                          # map(fun√ß√£o, iter√°vel) ‚Üí aplica uma fun√ß√£o a cada elemento de um iter√°vel (como lista, tupla, etc) e retorna um objeto que voc√™ pode converter em lista ou conjunto.
                                                                # fun√ß√£o ‚Üí algo que transforma o valor.
                                                                # iter√°vel ‚Üí a lista ou conjunto de valores que voc√™ quer transformar.
                                                          # set(...) ‚Üí cria um conjunto de n√∫meros. 
                                                          # Conjuntos facilitam a verifica√ß√£o de disponibilidade (if quarto in quartos_disponiveis) e evitam duplicatas.
   

    # Entrada das reservas solicitadas 
    reservas_solicitadas = list(map(int, input().split()))  # Funciona parecido com o anterior, mas usamos lista (list) para manter a ordem dos pedidos.
                                                            # Entrada: 102 105 101 103 ‚Üí reservas_solicitadas = [102, 105, 101, 103]

    # Crie o processamento das reservas:
    confirmadas = []
    recusadas = []
    

    # Verifique se cada reserva pode ser confirmada com base na disponibilidade dos quartos: 
      # üí° Aqui √© onde os dados s√£o realmente processados e transformados:
        # eu decido quem fica confirmado e quem √© recusado.
    for quarto in reservas_solicitadas:           # for quarto in reservas_solicitadas: ‚Üí percorre cada pedido de reserva.
      if quarto in quartos_disponiveis:
        confirmadas.append(quarto)
        quartos_disponiveis.remove(quarto)        # remove para n√£o ser reservado de novo
      else:
        recusadas.append(quarto)                  

    # Sa√≠da dos resultados conforme especifica√ß√£o
    print("Reservas confirmadas:", " ".join(map(str, confirmadas)))
    print("Reservas recusadas:", " ".join(map(str, recusadas)))   
      # " ".join(map(str, confirmadas)) ‚Üí transforma cada n√∫mero da lista em string e junta todos separados por espa√ßo.

# Chamada da fun√ß√£o principal
processar_reservas()  
  # Aqui estamos executando a fun√ß√£o que definimos.
  # Sem essa linha, o c√≥digo s√≥ existiria como fun√ß√£o, mas n√£o faria nada at√© ser chamada.
