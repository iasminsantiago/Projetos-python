# ============================================================
# Uma clÃ­nica mÃ©dica quer automatizar seu sistema de atendimento.
# Criar uma funÃ§Ã£o que organize os pacientes em ordem de prioridade
# com base na idade e na urgÃªncia do caso.
#
# ðŸ“Œ CritÃ©rios de Prioridade:
# 1. Pacientes que apresentam a palavra "urgente" tÃªm prioridade mÃ¡xima.
# 2. Pacientes acima de 60 anos tÃªm prioridade.
# 3. Os demais pacientes sÃ£o atendidos por ordem de chegada.
#
# Entrada:
# - Um nÃºmero inteiro n, representando a quantidade de pacientes.
# - n linhas seguintes, cada uma contendo:
#   nome, idade, status
#   (exemplo: "Carlos, 40, normal")
#
# SaÃ­da:
# - Lista dos pacientes ordenada de acordo com as regras de prioridade.
#   Exemplo: "Ordem de Atendimento: Bruno, Ana, Carlos"
#
# Exemplo de execuÃ§Ã£o:
# Entrada:
# 3
# Carlos, 40, normal
# Ana, 70, normal
# Bruno, 30, urgente
#
# SaÃ­da:
# Ordem de Atendimento: Bruno, Ana, Carlos





# Entrada do nÃºmero de pacientes
n = int(input().strip())  # int converte o string para numero inteiro (input recebe strings) // strip tira espaÃ§os extras no comeÃ§o e fim

# Lista para armazenar pacientes
pacientes = []  # criamos lista vazia. Vazia pois gaurdaremos novos dados nela: todos os paciente,s cad aum com (nome, idade, status)

# Loop para entrada de dados
for _ in range(n):   # repete codigo n vezes, cada vez para um paciente
    nome, idade, status = input().strip().split(", ")  
          # lÃª a linha, tira espaÃ§os extras e separa pelo ", ". "Carlos, 40, normal" â†’ ["Carlos", "40", "normal"].
          # nome, idade, status = ... â†’ atribui cada parte Ã s variÃ¡veis.
    idade = int(idade)     # idade = int(idade) â†’ transforma idade em nÃºmero inteiro.
    pacientes.append((nome, idade, status))     # pacientes.append((nome, idade, status)) â†’ salva o paciente como uma tupla dentro da lista pacientes.

# Ordene por prioridade: urgente > idosos > demais:
urgentes = []
idosos = []
demais = []

for nome, idade, status in pacientes:   # for percorrerÃ¡ cada paciente da lista
  if status.lower() == "urgente":  # status.lower() â†’ deixa em minÃºsculo (para evitar erro se alguÃ©m digitar "Urgente" ou "URGENTE").
    urgentes.append((nome, idade))
  elif idade >= 60:         # Se nÃ£o for urgente mas idade â‰¥ 60 â†’ coloca em idosos. Separa, DEPOIS ordena. 
    idosos.append(nome)
  else:
    demais.append(nome)

# Agora, sim, ORDENAMOS. Ordena pelo 2Â° elemento da tupla (idade, indice Ã© 1), do maior para o menor (reverse=True).  
# Exemplo antes do sort: [("Bruno", 30), ("Clara", 80)].Depois: [("Clara", 80), ("Bruno", 30)].
urgentes.sort(key=lambda x: x[1], reverse=True)                                                                   
urgentes = [nome for nome, _ in urgentes]                        # extrai sÃ³ os nomes. Exemplo: ["Clara", "Bruno"].
  
ordem = urgentes + idosos + demais                               # Primeiro os urgentes, depois os idosos, depois os demais.
  
# Exiba a ordem de atendimento com tÃ­tulo e vÃ­rgulas:
print("Ordem de Atendimento: ", ", ".join(ordem))                # ", ".join(ordem) â†’ junta os nomes da lista em uma Ãºnica string, separados por vÃ­rgula.
                                                                 # Exemplo: ["Bruno", "Ana", "Carlos"] â†’ "Bruno, Ana, Carlos".
# ============================================================
